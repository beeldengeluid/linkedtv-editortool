angular.module('linkedtv').controller('informationCardModalController', 
	['$scope', '$modalInstance', 'conf', 'entityProxyService', 'entityCollection', 'chapterCollection', 'entityUtils',
	 'dimension', 'link', function ($scope, $modalInstance, conf, entityProxyService, entityCollection, chapterCollection,
	 entityUtils, dimension, link) {
	
	$scope.dimension = dimension;
	$scope.card = link || {};
	$scope.entityUtils = entityUtils;

	$scope.autogeneratedEntities = entityCollection.getChapterEntities();//fetch the correct entities from the entityCollection	
	$scope.expandedEntities = chapterCollection.getActiveChapter().expandedEntities || [];//TODO
	
	$scope.thumbs = null;
	$scope.thumbIndex = 0;

	$scope.fetchedTriples = null;
	
	$scope.foundEntity = {};//for the autocomplete box

	$scope.loading = false;

	$scope.templates = conf.templates;
	$scope.activeTemplate = null;//is set when using the dropdown

	//TODO this function formats the stored triples in the form of the user friendly template
	$scope.formatSavedProperties = function() {
		
	}

	$scope.addToCard = function(triple) {
		var t = null;
		if(triple) {
			//create a triple based on values/uris that are currently selected by the user
			t = {key : triple.key, value : triple.values[triple.index], uri : triple.uris[triple.index]};
			//use the key/value to add a property to a card (for convenience)
			$scope.card[t.key] = t.value;
		} else {
			t = {key : null, value : null, uri : null};
		}

		//Also add the triple to the list of triples (for convencience)
		$scope.addCardTriple(t);
	}

	$scope.addCardTriple = function(triple) {
		if($scope.card.triples) {
			$scope.card.triples.push(triple);
		} else {
			$scope.card.triples = [triple];
		}	
	}

	$scope.removeFromCard = function(index) {
		if($scope.card.triples[index].key === 'label') {
			$scope.card.label = null;
		} else if($scope.card.triples[index].key === 'poster') {
			$scope.card.poster = null;
		}
		$scope.card.triples.splice(index, 1);
	}

	$scope.nextTriple = function(index) {
		if($scope.fetchedTriples[index].index + 1 < $scope.fetchedTriples[index].values.length) {
			$scope.fetchedTriples[index].index++;
		} else {
			$scope.fetchedTriples[index].index = 0;
		}
	}

	$scope.setCardPoster = function(thumb) {
		$scope.card.poster = thumb;
		$scope.addCardTriple({key : 'poster', value : thumb, uri : null});
	}

	$scope.nextThumb = function() {
		if($scope.thumbIndex + 1 < $scope.thumbs.length) {
			$scope.thumbIndex++;
		} else {
			$scope.thumbIndex = 0;
		}
	}	

	$scope.isReserved = function(key) {
		return key === 'thumb';
	}

	$scope.DBpediaPropertyClass = function(triple) {
		return triple.uri ? 'dbpedia' : '';
	}	


	//----------------------------FETCH INFO FROM THE ENTITY PROXY------------------------------

	$scope.fetchExtraInfo = function(entity) {
		var uri = entity.disambiguationURL ? entity.disambiguationURL : entity.uri;
		if(uri) {
			if(!$scope.card.uri) {
				$scope.card.uri = uri;
			}
			entityProxyService.fetch(uri, $scope.entityInfoFetched);
			$scope.loading = true;
		}
	}

	$scope.entityInfoFetched = function(data) {
		$scope.fetchedTriples = [];
		$scope.$apply(function() {
			$scope.loading = false;
			$scope.thumbIndex = 0;
			$scope.thumbs = data.thumbs;
			$scope.fetchedTriples = data.info;
		})
	}


	//----------------------------BUTTON PANEL------------------------------

	$scope.cancel = function () {
		$modalInstance.dismiss('cancel');
	};

	$scope.ok = function () {
		$scope.updateCardProperties();
		if($scope.card.label) {
			$modalInstance.close({dimension : $scope.dimension, link : $scope.card});
		} else {
			alert('Please add a label');
		}
	};
	
	$scope.updateCardProperties = function() { //really ugly, but necessary for now...
		//TODO properly generate a URI
		if(!$scope.card.uri) {
			$scope.card.uri = 'http://linkedtv.eu/' + new Date().getTime();
		}
		for(t in $scope.card.triples) {
			$scope.card[$scope.card.triples[t].key] = $scope.card.triples[t].value;
		}
	}

	$scope.removeCard = function() {
		$scope.card.remove = true;
		$modalInstance.close({dimension : $scope.dimension, link : $scope.card});
	}
	
}]);